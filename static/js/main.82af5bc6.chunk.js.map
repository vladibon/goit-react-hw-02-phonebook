{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","form","input","type","pattern","title","required","onChange","Component","Filter","ContactList","findMatches","toLowerCase","includes","filter","trim","contacts","deleteContact","map","id","onClick","CONTACTS","App","newContact","find","contact","alert","saveContact","prevState","nanoid","contactId","handleFilterChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82af5bc6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport { Container };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { ...INITIAL_STATE };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            className={s.input}\n            type='text'\n            name='name'\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            className={s.input}\n            type='tel'\n            name='number'\n            value={number}\n            pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\n            title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type='submit'>Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport { ContactForm };\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input type='text' name='filter' value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import s from './ContactList.module.css';\n\nclass ContactList extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n    ).isRequired,\n    filter: PropTypes.string.isRequired,\n  };\n\n  findMatches = name =>\n    name.toLowerCase().includes(this.props.filter.toLowerCase().trim());\n\n  render() {\n    const { contacts, deleteContact } = this.props;\n\n    return (\n      <ul>\n        {contacts.map(\n          ({ id, name, number }) =>\n            this.findMatches(name) && (\n              <li key={id}>\n                <p>\n                  {name}: {number}\n                </p>\n\n                <button type='button' onClick={() => deleteContact(id)}>\n                  Delete\n                </button>\n              </li>\n            ),\n        )}\n      </ul>\n    );\n  }\n}\n\nexport { ContactList };\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Container } from './components/Container';\nimport { ContactForm } from './components/ContactForm';\nimport { Filter } from './components/Filter';\nimport { ContactList } from './components/ContactList';\n// import s from './App.module.css';\n\nconst CONTACTS = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nclass App extends Component {\n  state = {\n    contacts: [...CONTACTS],\n    filter: '',\n  };\n\n  handleSubmit = newContact => {\n    this.state.contacts.find(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts.`)\n      : this.saveContact(newContact);\n  };\n\n  saveContact = ({ name, number }) => {\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, { id: nanoid(8), name, number }],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  handleFilterChange = e => {\n    const { value } = e.target;\n\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handleSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.handleFilterChange} />\n        <ContactList\n          contacts={contacts}\n          filter={filter}\n          deleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}